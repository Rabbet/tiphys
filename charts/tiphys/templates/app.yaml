{{- range $app := .Values.apps }}
{{- range $job := $app.jobs }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "opszero.fullname" $ }}-{{ $job.name }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
  labels:
    {{- include "opszero.labels" $ | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        name: {{ include "opszero.fullname" $ }}-{{ $job.name }}
    spec:
      restartPolicy: Never
      containers:
        - name: {{ include "opszero.fullname" $ }}
          image: {{ default $.Values.defaultImage $app.image | quote }}
          imagePullPolicy: Always
          command: ["bash", "-c", {{ $job.command | join " " | quote}}]
          envFrom:
            - secretRef:
                name: {{ template "opszero.fullname" $ }}
{{- end }}

{{- if $app.service.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
  labels:
    {{- include "opszero.selectorLabels" $ | nindent 4 }}-{{ $app.name }}
spec:
  type: {{ $app.service.type }}
  selector:
    {{- include "opszero.selectorLabels" $ | nindent 4 }}-{{ $app.name }}
  {{- if ne $app.service.type "ExternalName" }}
  ports:
    - port: {{ $app.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  {{- else }}
  externalName: {{ $app.service.externalName }}
  {{- end }}

{{- if ne $app.service.type "ExternalName" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
  labels:
    {{- include "opszero.selectorLabels" $ | nindent 4 }}-{{ $app.name }}
spec:
  {{- if not $app.service.autoscaling.enabled }}
  replicas: {{ $.Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "opszero.selectorLabels" $ | nindent 6 }}-{{ $app.name }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
      {{- include "opszero.selectorLabels" $ | nindent 8 }}-{{ $app.name }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}
          image: {{ default $.Values.defaultImage $app.image | quote }}
          imagePullPolicy: Always
          {{- if $app.service.command }}
          command: ["bash", "-c", {{ $app.service.command | join " " | quote}}]
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ template "opszero.fullname" $ }}
          {{- if $app.secrets }}
            - secretRef:
                name: {{ template "opszero.fullname" $ }}-{{ $app.name }}
          {{- end }}
          env:
          - name: app
            value: {{ $app.name }}
          ports:
            - name: http
              containerPort: {{ $app.service.port }}
              protocol: TCP
          {{- if $app.service.resources }}
          resources:
            {{- toYaml $app.service.resources | nindent 12 }}
          {{- end }}
          {{- with $app.service.healthChecks }}
          {{ toYaml . | nindent 10 }}
          {{- end }}
{{- end }}

{{- if $app.secrets }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: {{ template "opszero.fullname" $ }}-{{ $app.name }}
  labels:
    {{- include "opszero.labels" $ | nindent 4 }}
stringData:
{{- range $k, $v := $app.secrets }}
  {{ $k }}: {{ $v | quote -}}
{{- end }}
{{- end }}

{{- if $app.service.autoscaling.enabled }}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
  labels:
    {{- include "opszero.labels" $ | nindent 4 }}
spec:
  scaleTargetRef:
    name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
    kind: Deployment
  minReplicaCount: {{ default $.Values.autoscaling.minReplicas $app.service.autoscaling.minReplicas }}
  maxReplicaCount: {{ default $.Values.autoscaling.maxReplicas $app.service.autoscaling.maxReplicas }}
  cooldownPeriod: 60
  triggers:
  - type: cpu
    metadata:
      type: Utilization
      value: {{ default $.Values.autoscaling.CPUUtilizationPercentage $app.service.autoscaling.targetCPUUtilizationPercentage | quote }}
  - type: memory
    metadata:
      type: Utilization
      value: {{ default $.Values.autoscaling.targetMemoryUtilizationPercentage $app.service.autoscaling.targetMemoryUtilizationPercentage | quote }}
{{- end }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
  labels:
    {{- include "opszero.labels" $ | nindent 4 }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-body-size: "128m"
  {{- with $.Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: nginx
  rules:
    {{- range $app.service.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ . | quote }}
            pathType: Prefix
            backend:
              service:
                name: {{ include "opszero.fullname" $ }}-{{ $app.name }}
                {{- if ne $app.service.type "ExternalName" }}
                port:
                  number: {{ $app.service.port }}
                {{- end }}
          {{- end }}
    {{- end }}
  tls:
    - hosts:
    {{- range $app.service.hosts }}
        - {{ .host }}
    {{- end }}
      secretName: {{ include "opszero.fullname" $ }}-{{ $app.name }}-tls
{{- end -}}

{{- range $cronjob := $app.cronjobs }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "opszero.fullname" $ }}-{{ $app.name }}-{{ $cronjob.name }}
  labels:
    {{- include "opszero.labels" $ | nindent 4 }}
spec:
  schedule: {{ $cronjob.schedule | quote }}
  successfulJobsHistoryLimit: 0
  concurrencyPolicy: Replace
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: app
              image: {{ default $.Values.defaultImage $app.image | quote }}
              imagePullPolicy: Always
              command: ["bash", "-c", {{ $cronjob.command | join " " | quote}}]
              envFrom:
                - secretRef:
                    name: {{ template "opszero.fullname" $ }}
              {{- if $cronjob.resources }}
              resources:
                {{- toYaml $cronjob.resources | nindent 16 }}
              {{- end }}
{{- end }}
{{- end }}
